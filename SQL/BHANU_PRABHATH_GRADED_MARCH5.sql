create database hremployeeDB ;
USE HREMPLOYEEDB;
SELECT * FROM hr_employee;

-- 2.	Return the shape of the table
SELECT COUNT(*) AS ROWS_COUNT, (SELECT count(*) FROM hremployeeDB.columns WHERE table_name ='HR_EMPLOYEE') AS COLUMNS_COUNT FROM HR_EMPLOYEE;

-- 3.	Show the count of Employee & percentage Workforce in each Department.
SELECT DEPARTMENT,COUNT(*) AS COUNT_EMPLOYEE, COUNT(*)/(SELECT COUNT(*) FROM HR_EMPLOYEE) AS PERSENTAGE
FROM HR_EMPLOYEE
GROUP BY DEPARTMENT;

-- 4.	Which gender have higher strength as workforce in each department?
SELECT EMPI.DEPARTMENT, IF(EMPI.MALE>EMPI.FEMALE, 'MALE','FEMALE') AS HIGH_STR, EMPI.MALE,EMPI.FEMALE
FROM (
	SELECT Department  ,
	COUNT(CASE WHEN UPPER(Gender)='MALE' THEN 1 END) AS Male,
	COUNT(CASE WHEN UPPER(Gender)='FEMALE' THEN 1 END) AS Female
	FROM HR_EMPLOYEE
	GROUP BY DEPARTMENT
	) AS EMPI
GROUP BY DEPARTMENT;

-- 5.	Show the workforce in each Job Role
SELECT DEPARTMENT, COUNT(*) AS WORKFORCE
FROM HR_EMPLOYEE
GROUP BY DEPARTMENT
ORDER BY WORKFORCE;

-- 6.	Show Distribution of Employee's Age Group.
ALTER TABLE HR_EMPLOYEE ADD COLUMN AGE_GROUP VARCHAR(20);  
UPDATE HR_EMPLOYEE 
SET AGE_GROUP = IF (AGE <= 25, '<25', IF (AGE>40,'40+', '25-40'));
SELECT AGE_GROUP, COUNT(*) AS WORKFORCE
FROM HR_EMPLOYEE
GROUP BY AGE_GROUP;

-- 7.	Compare all marital status of employee and find the most frequent marital status.
SELECT maritalSTATUS, COUNT(*) AS STRENGTH
FROM HR_EMPLOYEE
GROUP BY maritalSTATUS
ORDER BY STRENGTH DESC
LIMIT 1;

-- 8.	What is Job satisfaction level of employee?
SELECT distinct JobSatisfaction FROM hR_EMPLOYEE;
SELECT JOBSATISFACTION, COUNT(*) FROM HR_EMPLOYEE
GROUP BY JOBSATISFACTION;

-- 9.	How frequently employee is going on Business Trip.
SELECT * FROM HR_EMPLOYEE;
SELECT distinct BUSINESSTRAVEL FROM HR_EMPLOYEE;
SELECT BUSINESSTRAVEL, COUNT(*) FROM HR_EMPLOYEE
GROUP BY BUSINESSTRAVEL;

-- 10.	Show the Department with Highest Attrition Rate (Percentage)
select distinct attrition from hr_employee;
SELECT Department  ,
(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE,
COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END) AS NOPE,
COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END) AS YES
FROM HR_EMPLOYEE
GROUP BY DEPARTMENT
ORDER BY ATTRITION_PERSENTATGE DESC
LIMIT 1;

-- 11.	Show the Job Role with Highest Attrition Rate (Percentage)
SELECT JOBROLE  ,
(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE,
COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END) AS YES,
COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END) AS NOPE
FROM HR_EMPLOYEE
GROUP BY JOBROLE
ORDER BY ATTRITION_PERSENTATGE DESC
LIMIT 1;

-- 12.	Show Distribution of Employee's Promotion, Find the maximum chances of employee getting promoted.
SELECT * FROM HR_EMPLOYEE;
USE HREMPLOYEEDB;
select DISTINCT YearsSinceLastPromotion FROM HR_EMPLOYEE ORDER BY YearsSinceLastPromotion;
alter table HR_EMPLOYEE ADD COLUMN CHANCE_OF_PROMOTION VARCHAR(20);

SET SQL_SAFE_UPDATES = 0;
UPDATE HR_EMPLOYEE 
SET CHANCE_OF_PROMOTION = IF (YearsSinceLastPromotion < 5, 'LOW',IF (YearsSinceLastPromotion > 10,'HIGH','MEDIUM'));
SELECT * FROM HR_EMPLOYEE
ORDER BY CHANCE_OF_PROMOTION;
SELECT CHANCE_OF_PROMOTION, COUNT(*) AS COUNT
FROM HR_EMPLOYEE
GROUP BY CHANCE_OF_PROMOTION
ORDER BY COUNT DESC;

-- 13.	Find the Attrition Rate for Marital Status.
SELECT MARITALSTATUS  ,
(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE,
COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END) AS YES,
COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END) AS NOPE
FROM HR_EMPLOYEE
GROUP BY MARITALSTATUS
ORDER BY ATTRITION_PERSENTATGE DESC;

-- 14.	Find the Attrition Count & Percentage for Different Education Levels
SELECT DISTINCT EDUCATION FROM HR_EMPLOYEE;
SELECT DISTINCT EDUCATIONFIELD FROM HR_EMPLOYEE;

SELECT EDUCATION  ,
(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE,
COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END) AS YES,
COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END) AS NOPE
FROM HR_EMPLOYEE
GROUP BY EDUCATION
ORDER BY ATTRITION_PERSENTATGE DESC;

-- 15.	Find the Attrition & Percentage Attrition for Business Travel.
SELECT BUSINESSTRAVEL  ,
(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE,
COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END) AS YES,
COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END) AS NOPE
FROM HR_EMPLOYEE
GROUP BY BUSINESSTRAVEL
ORDER BY ATTRITION_PERSENTATGE DESC;

-- 16.	Find the Attrition & Percentage Attrition for Various JobInvolvement
SELECT JobInvolvement  ,
(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE,
COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END) AS YES,
COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END) AS NOPE
FROM HR_EMPLOYEE
GROUP BY JobInvolvement	
ORDER BY ATTRITION_PERSENTATGE DESC;

-- 17.	Show Attrition Rate for Different JobSatisfaction.
SELECT JobSatisfaction  ,
(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE,
COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END) AS YES,
COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END) AS NOPE
FROM HR_EMPLOYEE
GROUP BY JobSatisfaction	
ORDER BY ATTRITION_PERSENTATGE DESC;

-- 18.	Find key reasons for Attrition in Company.
USE HREMPLOYEEDB;
SELECT JobSatisfaction,JobInvolvement,BusinessTravel, EDUCATION,HOURLYRATE
FROM (
		SELECT JobSatisfaction  ,
		(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE
		FROM HR_EMPLOYEE
		GROUP BY JobSatisfaction	
		ORDER BY ATTRITION_PERSENTATGE DESC
        LIMIT 1
	) AS JS,
    (
    SELECT JobInvolvement  ,
	(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE
	FROM HR_EMPLOYEE
	GROUP BY JobInvolvement	
	ORDER BY ATTRITION_PERSENTATGE DESC
    LIMIT 1
    ) AS JI,
    (
    SELECT BusinessTravel  ,
	(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE
	FROM HR_EMPLOYEE
	GROUP BY BusinessTravel	
	ORDER BY ATTRITION_PERSENTATGE DESC
    LIMIT 1
    ) AS BT,
    (
    SELECT EDUCATION  ,
	(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE
	FROM HR_EMPLOYEE
	GROUP BY EDUCATION	
	ORDER BY ATTRITION_PERSENTATGE DESC
    LIMIT 1
    ) AS EDU,
    (
    SELECT HOURLYRATE  ,
	(COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END)*100/(COUNT(CASE WHEN UPPER(ATTRITION)='NO' THEN 1 END)+COUNT(CASE WHEN UPPER(ATTRITION)='YES' THEN 1 END))) AS ATTRITION_PERSENTATGE
	FROM HR_EMPLOYEE
	GROUP BY HOURLYRATE	
	ORDER BY ATTRITION_PERSENTATGE DESC
    LIMIT 1
    ) AS HR;

-- 19.	Return all employee where WorkEx greater than 10, provided that they travel frequently, WorkLifeBalance as Good and JobSatisfaction is Very High.
SELECT *
FROM HR_EMPLOYEE
WHERE WORKEX>10 AND BUSINESSTRAVEL = 'Travel_Frequently' AND  WORKLIFEBALANCE = 'GOOD' AND JobSatisfaction = 'Very High';

-- 20.	 Write query to display who has better WorkLifeBalance , Married, Single or Divorced provided that Performace_Rating is Outstanding. 
SELECT DISTINCT WORKLIFEBALANCE FROM HR_EMPLOYEE;
SELECT HRI.MARITALSTATUS, BAD+BETTER+GOOD+BEST AS AGGRE_GATE, BAD, BETTER, GOOD , BEST
FROM (
	SELECT 
	MARITALSTATUS,
	COUNT(CASE WHEN UPPER(WORKLIFEBALANCE)='BAD' THEN 1 END) AS BAD,
	COUNT(CASE WHEN UPPER(WORKLIFEBALANCE)='BETTER' THEN 1 END) AS BETTER,
	COUNT(CASE WHEN UPPER(WORKLIFEBALANCE)='GOOD' THEN 1 END) AS GOOD,
	COUNT(CASE WHEN UPPER(WORKLIFEBALANCE)='BEST' THEN 1 END) AS BEST
	FROM HR_EMPLOYEE
	WHERE Performance_Rating = 'Outstanding'
	GROUP BY MARITALSTATUS	
	) AS HRI;
